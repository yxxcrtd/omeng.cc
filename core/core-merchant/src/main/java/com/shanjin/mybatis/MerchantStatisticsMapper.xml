<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.shanjin.dao.IMerchantStatisticsDao">

  <!-- 当前应用的商户统计信息记录数查询 -->
  <select id="selectMerchantStatisticsCount" parameterType="java.util.Map" resultType="java.lang.Integer">
      select
          count(1)
      from
          merchant_statistics
      where
          merchant_id = (select merchant_id from merchant_employees where phone = #{phone} and app_type = #{appType} and is_del = 0)
  </select>

  <!-- 商户统计信息表初期化 -->
  <insert id="insertMerchantStatistics" parameterType="java.util.Map">
      insert into
          merchant_statistics
      (
          merchant_id,
          order_surplus_price,
          app_type
      )
      values
      (
          #{merchantId},
          #{orderSurplusPrice},
          #{appType}
      )
  </insert>

  <!-- 商户服务评价信息查询 -->
  <select id="selectPreviewInfo" parameterType="java.util.Map" resultType="java.util.HashMap">
      select
          total_attitude_evaluation as totalAttitudeEvaluation,
          total_quality_evaluation as totalQualityEvaluation,
          total_speed_evaluation as totalSpeedEvaluation,
          service_frequency as serviceFrequency
      from
          merchant_statistics
      where
          merchant_id = #{merchantId}
         <!-- and app_type = #{appType} -->
  </select>

  <!-- 统计排行信息查询 -->
  <select id="selectMerchantStatistics" parameterType="java.util.Map" resultType="java.util.HashMap">
      select
          tmp1.grabFrequency as grabFrequency,
          tmp1.serviceFrequency as serviceFrequency,
          (case tmp1.grabRanking when 0 then 1 else tmp1.grabRanking + 1 end) as grabRanking,
          (case tmp1.serviceRanking when 0 then 1 else tmp1.serviceRanking + 1 end) as serviceRanking
      from
          (select
              tmp0.grabFrequency as grabFrequency,
              tmp0.serviceFrequency as serviceFrequency,
              (
              select
                  count(1)
              from
                  merchant_statistics
              where
                  grab_frequency > tmp0.grabFrequency
                  and app_type = #{appType}
              ) as grabRanking,
              (
              select
                  count(1)
              from
                  merchant_statistics
              where
                  service_frequency > tmp0.serviceFrequency
                  and app_type = #{appType}
              ) as serviceRanking
          from
              (
              select
                  grab_frequency as grabFrequency,
                  service_frequency as serviceFrequency
              from
                  merchant_statistics
              where
                  merchant_id = #{merchantId}
                  and app_type = #{appType}
              ) tmp0
          ) tmp1
  </select>

  <!-- 商户收入信息查询 -->
  <select id="selectMyIncome" parameterType="java.util.Map" resultType="java.util.HashMap">
      select
          total_withdraw_price as totalWithdrawPrice,
          surplus_price as surplusPrice,
          order_surplus_price as orderSurplusPrice
      from
          merchant_statistics
      where
          merchant_id = #{merchantId}
          <!-- and app_type = #{appType} -->
  </select>
  
  <!-- 商户余额信息查询 -->
  <select id="selectSurplusPrice" parameterType="java.util.Map" resultType="java.math.BigDecimal">
      select
          surplus_price as surplusPrice
      from
          merchant_statistics
      where
          merchant_id = #{merchantId}
          <!-- and app_type = #{appType} -->
  </select>

  <!-- 更新总抢单次数 -->
  <update id="updateGrabFrequency" parameterType="java.util.Map">
      update
          merchant_statistics
      set
          grab_frequency = grab_frequency + 1
      where
          merchant_id = #{merchantId}
          <!-- and app_type = #{appType} -->
  </update>

  <!-- 更新总提取金额，余额 -->
  <update id="updatePrice" parameterType="java.util.Map">
      update
          merchant_statistics
      set
          total_withdraw_price = total_withdraw_price + #{withdrawPrice},
          surplus_price = surplus_price - #{withdrawPrice}
      where
          merchant_id = #{merchantId}
          <!-- and app_type = #{appType} -->
  </update>

  <!-- 商户抢单次数查询 -->
  <select id="selectGrabFrequency" parameterType="java.util.Map" resultType="java.util.HashMap">
      select
          grab_frequency as grabFrequency
      from
          merchant_statistics
      where
          merchant_id = #{merchantId}
         <!--  and app_type = #{appType} -->
  </select>
  
  <!-- 更新订单余额 -->
  <update id="updateOrderSurplusPrice" parameterType="java.util.Map">
      update
          merchant_statistics
      set
          order_surplus_price = order_surplus_price + #{money}
      where
          merchant_id = #{merchantId}
  </update>
  
  	<!-- 更新appType -->
	<update id="updateAppType" parameterType="java.util.Map">
		update
		merchant_statistics
		set
		appType = #{appType}
		where
		merchant_id = #{merchantId}
		and (appType is null or appType != #{appType})
	</update>

  <!-- 根据商户ID查询商户的所有统计信息 -->
  <select id="selectStatisticsInfo" parameterType="java.util.Map" resultType="java.util.HashMap">
      select
          grab_frequency as grabFrequency,
          service_frequency as serviceFrequency,
          total_income_price as totalIncomePrice,
          total_withdraw_price as totalWithdrawPrice,
          surplus_price as surplusPrice,
          order_surplus_price as orderSurplusPrice,
          total_attitude_evaluation as totalAttitudeEvaluation,
          total_quality_evaluation as totalQualityEvaluation,
          total_speed_evaluation as totalSpeedEvaluation,
          total_count_evaluation as totalCountEvaluation
      from
          merchant_statistics
      where
          merchant_id = #{merchantId}
  </select>
  
  
    <!--查询商户可转入 昨日收入和本月收入-->
 <select id="selectMerchantIncomeIndex" parameterType="java.util.HashMap" resultType="java.util.HashMap">
      select  t1.monthTotalAmount,t2.yesterdayTotalAmount,t3.orderSurplusPrice,t4.payApplyStatus from 
      (
	 	select ifnull(sum(payment_price),0) as monthTotalAmount from merchant_payment_details where merchant_id = #{merchantId}
		and  is_del = 0  and DATE_FORMAT(payment_time,'%Y%m') = DATE_FORMAT(now(),'%Y%m')
	  ) t1,
	 (
	  select ifnull(sum(payment_price),0) as yesterdayTotalAmount from merchant_payment_details  where merchant_id = #{merchantId}
	   and  is_del = 0  and DATE_FORMAT(payment_time,'%Y%m%d') = DATE_FORMAT(ADDDATE(now(),-1),'%Y%m%d')
     ) t2,
     (
      select ifnull(order_surplus_price,0) as orderSurplusPrice from merchant_statistics where merchant_id =#{merchantId} 
      and app_type= #{appType}
     ) t3,
     (
      select case when ifnull(count(1),0)=0 then -1 else 1 end payApplyStatus from merchant_topup_apply m where m.merchant_id=#{merchantId}  
      and m.apply_status in (0,1)
      and m.app_type= #{appType}
      and m.is_del=0
     ) t4

  </select> 
    <!--查询商户 充值审核-1-可充值，1-确认中，不可充值-->
 <select id="selectMerchantPayApplyStatus" parameterType="java.util.HashMap" resultType="java.lang.Integer">
      select case when ifnull(count(1),0)=0 then -1 else 1 end payApplyStatus from inc_pkg_order m 
      where m.merchant_id=#{merchantId}  and m.is_del=0 and  m.status= 1 and pkg_id = (select id from inc_pkg where is_default=1)
  </select> 
  
  <!--查询商户可转入  钱包的金额 == 商户总余额 - 当月的订单收入金额 -->
 <select id="selectTransoutAmount" parameterType="java.lang.Long" resultType="java.util.HashMap">
      select 
	 	(t1.totalSurpluPrice - t2.monthTotalAmount) as avaliableTrasoutAmount,
	 	t1.totalSurpluPrice as totalSurpluPrice,
	 	t2.monthTotalAmount as monthTotalAmount,
	 	t1.orderSurplusPrice as orderSurplusPrice
  	 from 
        ( select ifnull(ms.surplus_price,0) as  totalSurpluPrice,
          ifnull(ms.order_surplus_price,0) as orderSurplusPrice
          from  merchant_statistics  ms 
          where ms.merchant_id = #{merchantId}) t1,
        (select ifnull(sum(payment_price),0) as monthTotalAmount from merchant_payment_details 
          where merchant_id = #{merchantId}  and  payment_type = 0 and  is_del = 0
         and DATE_FORMAT(payment_time,'%Y%m') = DATE_FORMAT(now(),'%Y%m')) t2
  </select> 
  
</mapper>

