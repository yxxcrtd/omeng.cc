<?xml version="1.0" encoding="utf-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
xmlns:p="http://www.springframework.org/schema/p"
xmlns:aop="http://www.springframework.org/schema/aop"
xmlns:context="http://www.springframework.org/schema/context"
xmlns:mvc="http://www.springframework.org/schema/mvc"
xsi:schemaLocation="http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans-4.1.xsd
    http://www.springframework.org/schema/context
    http://www.springframework.org/schema/context/spring-context-4.1.xsd
    http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.1.xsd
    http://www.springframework.org/schema/mvc
    http://www.springframework.org/schema/mvc/spring-mvc-4.1.xsd">
  
  <!-- 自动扫描该包，使SpringMVC认为包下用了@controller注解的类是控制器 -->
  <context:component-scan base-package="com.shanjin.controller" />
  <aop:aspectj-autoproxy/> 
 <aop:aspectj-autoproxy proxy-target-class="true" />
  <!--避免IE执行AJAX时，返回JSON出现下载文件 
  <bean id="mappingJacksonHttpMessageConverter" class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
    <property name="supportedMediaTypes">
      <list>
        <value>text/html;charset=UTF-8</value>
      </list>
    </property>
  </bean>-->
  
  <!-- 直接读取静态资源 -->
  <mvc:default-servlet-handler/>
  
  
  <mvc:annotation-driven>
        <mvc:message-converters register-defaults="true">
            <!-- 解决JSON 返回中文乱码 -->
            <bean class="org.springframework.http.converter.StringHttpMessageConverter">
                <constructor-arg value="UTF-8" />
            </bean>
            <bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
                <property name="objectMapper">
                     <bean class="org.springframework.http.converter.json.Jackson2ObjectMapperFactoryBean">
                         <property name="failOnEmptyBeans" value="false" />
                     </bean>
                 </property>
            </bean>
        </mvc:message-converters>
    </mvc:annotation-driven>
  
   <!-- REST中根据URL后缀自动判定Content-Type及相应的View 
    <bean id="contentNegotiationManager" class="org.springframework.web.accept.ContentNegotiationManagerFactoryBean">
        <property name="mediaTypes">
            <value>
                json=application/json
                xml=application/xml
            </value>
        </property>
        <property name="ignoreAcceptHeader" value="true"/>
        <property name="favorPathExtension" value="true"/>
    </bean>-->
  
  <!-- 启动SpringMVC的注解功能，完成请求和注解POJO的映射 -->
  <bean class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">
    <!--<property name="messageConverters">
      <list>
        <ref bean="mappingJacksonHttpMessageConverter" />
         JSON转换器 
      </list>
    </property>-->
  </bean>
  
  <!-- 定义跳转的文件的前后缀 ，视图模式配置-->
  <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
    <!-- 这里的配置我的理解是自动给后面action的方法return的字符串加上前缀和后缀，变成一个 可用的url地址 -->
    <property name="prefix" value="/WEB-INF/jsp/" />
    <property name="suffix" value=".jsp" />
  </bean>
 
  <!-- 配置文件上传，如果没有使用文件上传可以不用配置，当然如果不配，那么配置文件中也不必引入上传组件包 -->
  <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
    <!-- 默认编码 -->
    <property name="defaultEncoding" value="utf-8" />
    <!-- 文件大小最大值 10MB-->
    <property name="maxUploadSize" value="104857600" />
    <!-- 内存中的最大值 -->
    <property name="maxInMemorySize" value="104857600" />
  </bean>
  
  <bean id="exceptionResolver" class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">  
        <property name="exceptionMappings">  
            <props>  
                <!-- 遇到MaxUploadSizeExceededException异常时，自动跳转到/WEB-INF/jsp/error_fileupload.jsp页面  -->  
                <prop key="org.springframework.web.multipart.MaxUploadSizeExceededException">redirect:/error/outOfFileSize</prop>  
              <prop key="java.lang.Exception">redirect:/error/error</prop>  
                <prop key="java.lang.Throwable">redirect:/error/error</prop> 
            </props>  
        </property>  
    </bean>  
  <mvc:interceptors>  
    <mvc:interceptor>  
      <mvc:mapping path="/**"/>
      <bean class="com.shanjin.common.interceptor.BusinessInterceptor"/>
    </mvc:interceptor> 
    <!-- 
    <mvc:interceptor>  
        <mvc:mapping path="/userOrder/**"/>
        <bean class="com.shanjin.common.interceptor.ValidateTokenInterceptor"/>
    </mvc:interceptor>
     -->   
  </mvc:interceptors> 
  
  <!-- 定时任务 -->
  <bean id="checkOrder" class="com.shanjin.common.quartz.checkOrder"/>
  <bean id="jobDetail" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">   
        <property name="targetObject" ref="checkOrder"/>  
        <property name="targetMethod" value="checkOrder"/>  
        <property name="concurrent" value="false"/>
  </bean>  
  <bean id="trigger" class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">  
       <property name="jobDetail" ref="jobDetail"/>  
       <property name="cronExpression" value="0 0 1 * * ?"/><!-- 每天1点执行 -->  
  </bean>
  <bean class="org.springframework.scheduling.quartz.SchedulerFactoryBean">  
       <property name="triggers">  
           <list>  
              <ref bean="trigger"/>  
           </list>  
       </property>  
       <property name="autoStartup" value="true"/> 
  </bean>
  
</beans>
